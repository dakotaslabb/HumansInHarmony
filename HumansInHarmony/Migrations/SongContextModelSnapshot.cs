// <auto-generated />
using HumansInHarmony.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HumansInHarmony.Migrations
{
    [DbContext(typeof(HarmonyContext))]
    partial class SongContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HumansInHarmony.Models.DislikedSongs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArtistName");

                    b.Property<string>("ArtworkUrl100");

                    b.Property<string>("CollectionName");

                    b.Property<string>("PreviewUrl");

                    b.Property<int>("TrackId");

                    b.Property<string>("TrackName");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("DislikedSongs");
                });

            modelBuilder.Entity("HumansInHarmony.Models.LikedSongs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArtistName");

                    b.Property<string>("ArtworkUrl100");

                    b.Property<string>("CollectionName");

                    b.Property<string>("PreviewUrl");

                    b.Property<int>("TrackId");

                    b.Property<string>("TrackName");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LikedSongs");
                });

            modelBuilder.Entity("HumansInHarmony.Models.SongInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArtistName");

                    b.Property<string>("ArtworkUrl100");

                    b.Property<string>("CollectionName");

                    b.Property<string>("PreviewUrl");

                    b.Property<int>("TrackId");

                    b.Property<string>("TrackName");

                    b.HasKey("Id");

                    b.ToTable("SongInfo");
                });

            modelBuilder.Entity("HumansInHarmony.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Facebook");

                    b.Property<string>("Instagram");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Snapchat");

                    b.Property<string>("Twitter");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("HumansInHarmony.Models.DislikedSongs", b =>
                {
                    b.HasOne("HumansInHarmony.Models.User")
                        .WithMany("Dislikes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HumansInHarmony.Models.LikedSongs", b =>
                {
                    b.HasOne("HumansInHarmony.Models.User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
